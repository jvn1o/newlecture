- 프로그래밍과 어플리케이션의 차이
프로그래밍: 어떠한 결과값을 만들어내는 행위
어플리케이션: UI(User Interface)를 탑재하여 사용자를 위한 프로그램을 만드는 행위 

- 자바 프로그램에서의 중요성
Java Platform을 사용하여 각 기계마다의 특성을 고려하지 않고 호환할 수 있게 된다.
어플리케이션보다 플랫폼이 중요하다
Java Runtime에서는 Java를 통해야만 실행할 수 있다

- 코드 = 함수(플랫폼) + 나머지(언어)

- 코드 작성시 반드시 클래스(울타리)안에 메인(블럭)을 쌓고 연산식을 작성해야 한다, 이중 main 함수는 처음에 실행되어야 한다.

- 코드 내에서는 작업 단위를 구분자 ';' 로써 구분하여 나타낸다.

- 컴파일러가 정한 키워드 이외에는 함수를 지정하여 사용해야 오류가 발생하지 않고 정상 작동한다.

- API는 간접적인 접근 방법이다

- OS는 사용자와 직접적인 관계는 없고 소프트웨어를 제어, 관리하는 역할을 한다.

- 콘솔(API)은 장치를 이용할 때 사용하는 인터페이스




* 2주차 조별 스터디 과제 (개인 풀이)


자바의 코드가 길어지면 코드를 나누어 만들 수도 있어야 한다. 자바에서는 그것을 위한 도구를 무엇이라고 하는가?
-> 함수 (메소드)


코드를 나누어서 작성하게 되면  그 나뉜 조각들의 수가 많아질 수 있다.그러면 그것들을 수납하는 도구가 필요할텐데,. 자바에서 사용하는 도구는 무엇이 있는가?
-> 클래스


다음  코드에서는 여러 줄에서 오류가 발생한다. 오류가 발생 원인이 되는 줄 번호를 쓰고 오류 원인을 쓰시오.  (참고 : 구문 오류는 총 5개이며 절대로 컴파일을 통해서 답을 찾지 말것.)
1	public class App
2	public static void main(String[] args){
3	int kor1;
4	int kor2;
5	int kor3;
6	int total;
7
8	kor1 = 30;
9	kor2 = 20;
10	kor3 = 100;
11
12	total = kor1 + Kor2 + kor3;
13	avg = totol / 3
14	}
15}


1 번째 줄 : 중괄호({) 생략의 이유로 오류가 발생한다.
    수정된 코드 : -> public class App{

5 번째 줄 : 자바의 문장(처리 단위) 끝마침을 의미하는 ;(세미콜론)이 없다는 이유로 오류가 발생한다.
    수정된 코드 : -> int kor3;
		
7 번째 줄 : 변수 avg의 선언 및 초기화를 하지 않은 이유로 오류가 발생한다.
    수정된 코드 : -> flota avg;

12 번째 줄 : 변수명 kor2에서 오탈자의 이유로 오류가 발생한다.
    수정된 코드 : -> total = kor1 + kor2 + kor3;

13 번째 줄 : 변수명 total에서 오탈자의 이유로 오류가 발생한다.
    수정된 코드 : -> avg = total / 3



다음은 프로그래밍에서 사용되는 기본적인 용어들이다. 각 용어에 대한 의미를 설명해보기로 하자. 필요하면 관련 내용을 조사해서 포함시켜도 좋을 것 같다.


인터페이스
-> 두 대상이 상대의 내부 동작방식을 몰라도 다른 대상이 상대를 사용할 수 있게 만든 약속, 표준, 접점 


사용자 인터페이스
-> 무언가를 이용할 수 있도록, 사용자를 위한 접근 수단


콘솔
-> 사용자가 기계를 사용할 수 있게 하는 장치, 조작 도구
	

운영체제
-> 어플리케이션을 실행 & 종료하도록 관리, 제어하는 소프트웨어


운영체제와 주크박스의 차이점
-> 운영체제는 소프트웨어이고 주크박스는 물리적 장치이다.
	
	
쉘(Shell)
-> 명령어 해석기, 사용자가 OS에게 내리고 싶은 명령을 가능하게 해주는 존재
OS는 Shell이 있어야만 사용자가 원하는 어플리케이션 실행 가능


CUI
-> Command User Interface
사용자가 명령어 입력을 통해 어플리케이션 실행을 가능하게하는 인터페이스


GUI
-> Graphic User Interface
사용자가 명령어 입력없이도 시각적으로 조작가능한 인터페이스


프롬프트
-> 명령어를 실행하게 해주는 프로그램


커서
-> 입력하고있는 현 위치
	

프롬프트 커서
-> 프롬프트에서 명령을 입력하는 현위치

